<?php
namespace eles\coreframe\event; use Symfony\Component\EventDispatcher\EventSubscriberInterface; use Symfony\Component\DependencyInjection\Container; class listener implements EventSubscriberInterface { protected $cache; protected $config; protected $config_text; protected $controller_helper; protected $request; protected $template; protected $user; protected $di_container; protected $db; protected $data_arr_file; protected $data; protected $phpbb_root_path; protected $php_ext; public function __construct(\phpbb\db\driver\driver_interface $db, Container $sp2e82c5, \phpbb\cache\driver\driver_interface $cache, \phpbb\config\config $config, \phpbb\config\db_text $sp5b3a34, \phpbb\controller\helper $sp5da080, \phpbb\request\request $request, \phpbb\template\template $template, \phpbb\user $user, $phpbb_root_path, $sp80d85d) { $this->db = $db; $this->di_container = $sp2e82c5; $this->cache = $cache; $this->config = $config; $this->config_text = $sp5b3a34; $this->controller_helper = $sp5da080; $this->request = $request; $this->template = $template; $this->user = $user; $this->phpbb_root_path = $phpbb_root_path; $this->php_ext = $sp80d85d; $this->data_arr_file = (require __DIR__ . '/../inc/cfg/opts.' . $this->php_ext); $this->spf5092f(); } private function spf5092f() { $spde1087 = $this->cache->get('_coreframe_data'); if ($spde1087 === false) { $spde1087 = $this->config_text->get_array(array_keys($this->data_arr_file)); $this->cache->put('_coreframe_data', $spde1087); } $this->data = $this->cache->get('_coreframe_data'); } public static function getSubscribedEvents() { return array('core.user_setup' => '_event_user_setup', 'core.page_footer' => '_event_page_footer'); } public function _event_user_setup() { if (true == $this->config['c_devmode_on']) { $this->cache->purge(); } $this->user->add_lang_ext('eles/coreframe', 'eles'); $this->template->assign_var('C_THEME_ON', true); $this->template->assign_var('U_THEME', 'http://www.gophpbb.com/eles'); $spc66dd0 = $this->data_arr_file; foreach ($spc66dd0 as $spfa4c45 => $spb5dfc8) { if ('config_text' === $spb5dfc8) { if ('c_style_vars' === $spfa4c45) { $sp41cf4c = ''; $spe0e632 = ''; $sp3ba1c0 = json_decode(base64_decode($this->data[$spfa4c45]), true); if ($sp3ba1c0) { $sp5f55e5 = '&amp;'; foreach ($sp3ba1c0 as $sp8e67f1 => $spcfc75b) { if (array_search($sp8e67f1, array_keys($sp3ba1c0)) + 1 === sizeof($sp3ba1c0)) { $sp5f55e5 = ''; } $sp41cf4c .= $sp8e67f1 . '=' . urlencode($spcfc75b) . $sp5f55e5; $spe0e632 = $sp3ba1c0['theme']; } } $this->template->assign_var('C_STYLE_QUERY', $sp41cf4c); $this->template->assign_var('C_PARENT_THEME', $spe0e632); } else { if ('c_sidebar_widgets' === $spfa4c45 || 'c_footer_widgets' === $spfa4c45) { $sp12cb15 = json_decode(base64_decode($this->data[$spfa4c45]), true); if ($sp12cb15) { foreach ($sp12cb15 as $sp2ea89d) { $sp043768 = __DIR__ . '/../inc/widgets/' . $sp2ea89d . '.php'; $sp9df080 = $this->config["c_wid_{$sp2ea89d}_title"]; $sp975f52 = isset($this->data["c_wid_{$sp2ea89d}_code"]) ? htmlspecialchars_decode($this->data["c_wid_{$sp2ea89d}_code"]) : ''; $this->template->assign_block_vars($spfa4c45, array('WID' => $sp2ea89d, 'TITLE' => $sp9df080, 'CONTENT' => $sp975f52)); } } } else { if ('c_menu_items' === $spfa4c45) { $spc735b3 = json_decode(base64_decode($this->config_text->get($spfa4c45)), true); if ($spc735b3) { foreach ($spc735b3 as $spcfc75b) { $this->template->assign_block_vars($spfa4c45, array('TEXT' => $spcfc75b['text'], 'URL' => $spcfc75b['href'], 'CLASS' => 'mi-' . str_replace(' ', '-', strtolower($spcfc75b['text'])))); } } } else { if ('c_social_links' === $spfa4c45) { $spbf235d = json_decode(base64_decode($this->config_text->get($spfa4c45)), true); if ($spbf235d) { foreach ($spbf235d as $sp8e67f1 => $spcfc75b) { $this->template->assign_block_vars($spfa4c45, array('ID' => $sp8e67f1, 'ON' => $spcfc75b['title'] || $spcfc75b['href'], 'TITLE' => $spcfc75b['title'], 'URL' => $spcfc75b['href'], 'OPT' => ucwords(str_replace('-', ' ', $sp8e67f1)))); } } } else { $this->template->assign_var(strtoupper($spfa4c45), htmlspecialchars_decode($this->data[$spfa4c45])); } } } } } else { if ('c_sidebar_on' === $spfa4c45) { $spfa1c93 = str_replace('.php', '', $this->user->page['page_name']); $sp2f599b = json_decode(base64_decode($this->config_text->get('c_sidebar_pages')), true); $sp2f599b = $sp2f599b ? $sp2f599b : array(); $spe6e605 = in_array($spfa1c93, $sp2f599b) !== FALSE; $spc9bde9 = FALSE; foreach ($sp2f599b as $spf9f7bb) { if (strpos($spfa1c93, $spf9f7bb) !== FALSE) { $spc9bde9 = TRUE; } } $spe75517 = $spe6e605 ? $this->config[$spfa4c45] : $spc9bde9; $this->template->assign_var(strtoupper($spfa4c45), $spe75517); } else { $this->template->assign_var(strtoupper($spfa4c45), $this->config[$spfa4c45]); } } } } public function _event_page_footer() { $sp6b7803 = $this->di_container->get('eles.coreframe.widgets_service'); $sp6b7803->add_widgets_data(); } }